
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <link rel="shortcut icon" href="@Url.Content("~/Favicon/logo.ico")" type="image/x-icon" />
    <title>Restablecer Contraseña</title>
    <link rel="stylesheet" href="@Url.Content("~/Content/Css/Style.css")">
</head>
<body>
    <div class="wrapper active-popup">
        <div class="form-box login">
            <h2>Restablecer Contraseña</h2>
            <form id="resetForm">
                <div class="input-box">
                    <input type="hidden" id="token" value="@ViewBag.Token" />
                    <input type="password" id="nuevaClave" required placeholder=" ">
                    <label>Nueva contraseña</label>
                    <span class="icon"><ion-icon name="lock-closed-outline"></ion-icon></span>
                </div>
                <button type="submit" class="btn">Actualizar</button>
            </form>
        </div>
    </div>

    <!-- Iconos -->
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>

    <script>
        function showToast(message, isSuccess = true) {
            const toast = document.createElement("div");
            toast.className = isSuccess ? "toast-success" : "toast-error";
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }

        // Obtener el token desde URL y limpiar la barra de direcciones
        const params = new URLSearchParams(window.location.search);
        const token = params.get("token");

        if (token) {
            history.replaceState({}, document.title, window.location.pathname);
            document.getElementById("token").value = token;
        }

        document.getElementById("resetForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const token = document.getElementById("token").value;
            const nuevaClave = document.getElementById("nuevaClave").value;

            if (!token || token.trim() === "") {
                showToast("Token no válido.", false);
                return;
            }

            if (nuevaClave.length < 6) {
                showToast("La contraseña debe tener al menos 6 caracteres.", false);
                return;
            }

            try {
                const res = await fetch("https://localhost:7135/api/Access/ResetearClave", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ token, nuevaClave })
                });

                const data = await res.json();

                if (res.ok) {
                    showToast(data.message || "Contraseña actualizada correctamente");
                    setTimeout(() => {
                        window.location.href = "/Inicio/Principal"; // ← Página de login real
                    }, 2500);
                } else {
                    showToast(data.message || "No se pudo actualizar la contraseña", false);
                }
            } catch (err) {
                showToast("Error de conexión con el servidor", false);
            }
        });
    </script>
</body>
</html>

